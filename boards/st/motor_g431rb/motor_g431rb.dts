/dts-v1/;
#include <st/g4/stm32g431Xb.dtsi>
#include <st/g4/stm32g431r(6-8-b)tx-pinctrl.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <zephyr/dt-bindings/timer/stm32-timer.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
    model = "STM32G431RB  motor control";
    compatible = "st,stm32g431rb-motor";

    chosen {
		zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
		zephyr,display = &st7735r_160x80;
	};

    aliases {
  		qdec0 = &qdec0;
		pwm1 = &pwm1;
		tty3 = &usart3;
		tim1 = &timers1;
		adc2 = &adc2;
    };

	mipi_dbi_st7735r_160x80 {
		compatible = "zephyr,mipi-dbi-spi";
		dc-gpios = <&gpiod 2 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpioc 11 GPIO_ACTIVE_LOW>;
		spi-dev = <&spi3>;
		write-only;
		#address-cells = <1>;
		#size-cells = <0>;

		st7735r_160x80: st7735r@0 {
			compatible = "sitronix,st7735r";
			mipi-max-frequency = <DT_FREQ_M(20)>;
			mipi-mode = "MIPI_DBI_MODE_SPI_4WIRE";
			reg = <0>;
			width = <160>;
			height = <80>;
			// inversion-on;
			rgb-is-inverted;
			x-offset = <0>;
			y-offset = <24>;
			pwctr1 = [AB 0B 04];
			pwctr2 = [C5];
			pwctr3 = [0D 00];
			pwctr4 = [8D 6A];
			pwctr5 = [8D EE];
			invctr = <03>;
			frmctr1 = [05 3C 3C];
			frmctr2 = [05 3C 3C];
			frmctr3 = [05 3C 3C 05 3C 3C];
			vmctr1 = <15>;
			gamctrp1 = [07 0E 08 07 10 07 02 07 09 0F 25 36 00 08 04 10];
			gamctrn1 = [0A 0D 08 07 0F 07 02 07 09 0F 25 35 00 09 04 10];
			colmod = <5>;
			madctl = <0xa0>;
			caset = [00 01 00 a0];
			raset = [00 1a 00 69];
		};
	};

	leds {
		compatible = "gpio-leds";
		
		blue_led: led_b {
			gpios = <&gpioc 13 GPIO_ACTIVE_LOW>;
			label = "LED_B";
		};

		red_led: led_r {
			gpios = <&gpioc 15 GPIO_ACTIVE_LOW>;
			label = "LED_R";
		};

		green_led: led_g {
			gpios = <&gpioc 14 GPIO_ACTIVE_LOW>;
			label = "LED_G";
		};
	};

	buttons:buttons {
		compatible = "gpio-keys";
		status = "okay";

		key1: key1 {
			label = "KEY1";
			gpios = <&gpioc 9 GPIO_ACTIVE_LOW>;
			zephyr,code = <INPUT_KEY_1>;
		};

		key2: key2 {
			label = "KEY2";
			gpios = <&gpiob 12 GPIO_ACTIVE_LOW>;
			zephyr,code = <INPUT_KEY_2>;
		};
	};
	
	zephyr,user {
		gpios = <&gpiob 0 GPIO_ACTIVE_HIGH>,
				<&gpioa 1 GPIO_ACTIVE_HIGH>,
				<&gpioa 2 GPIO_ACTIVE_HIGH>,
				<&gpioa 0 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};
};

&clk_lsi {
	status = "okay";
};

&clk_hsi48 {
	status = "okay";
};

&clk_hse {
	clock-frequency = <DT_FREQ_M(16)>;
	status = "okay";
};

&pll {
	div-m = <4>;
	mul-n = <85>;
	div-p = <2>;
	div-q = <2>;
	div-r = <2>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(170)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
};

&adc2 {
	st,adc-prescaler = <4>;
	st,adc-clock-source = "SYNC";
	st,adc-oversampler = "minimal";
	pinctrl-0 = <&adc2_in3_pa6
			&adc2_in4_pa7
			&adc2_in5_pc4
			&adc2_in11_pc5
			&adc2_in12_pb2
			&adc2_in13_pa5
			&adc2_in17_pa4>;
	pinctrl-names = "default";
	status = "okay";

	#address-cells = <1>;
	#size-cells = <0>;

	channel@3 {
		reg = <3>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
	channel@4 {
		reg = <4>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
	channel@5 {
		reg = <5>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
	channel@11 {
		reg = <11>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
	channel@12 {
		reg = <12>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
	channel@13 {
		reg = <13>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
	channel@17 {
		reg = <17>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
};

&usart1 {
	pinctrl-0 = <&usart1_tx_pb6 &usart1_rx_pb7>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&usart3 {
	pinctrl-0 = <&usart3_tx_pb10 &usart3_rx_pb11>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&spi3 {
	pinctrl-0 = <&spi3_sck_pc10 &spi3_mosi_pc12>;
	pinctrl-names = "default";
	cs-gpios = <&gpioa 15 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
	clock-frequency = <DT_FREQ_M(20)>;
	dmas = <&dmamux1 1 15 (STM32_DMA_PERIPH_TX | STM32_DMA_PRIORITY_LOW)>,
			<&dmamux1 2 14 (STM32_DMA_PERIPH_RX | STM32_DMA_PRIORITY_LOW)>;
	dma-names = "tx", "rx";
	status = "okay";
};

&rtc {
	clocks = <&rcc STM32_CLOCK(APB1, 10)>,
		 <&rcc STM32_SRC_LSI RTC_SEL(2)>;
	status = "okay";
};

&dma1 {
	status = "okay";
};

&dma2 {
	status = "okay";
};

&dmamux1 {
	status = "okay";
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 DT_SIZE_K(34)>;
		};

		slot0_partition: partition@8800 {
			label = "image-0";
			reg = <0x00008800 DT_SIZE_K(48)>;
		};

		slot1_partition: partition@14800 {
			label = "image-1";
			reg = <0x00014800 DT_SIZE_K(42)>;
		};

		/* Set 4Kb of storage at the end of the 128Kb of flash */
		storage_partition: partition@1f000 {
			label = "storage";
			reg = <0x0001f000 DT_SIZE_K(4)>;
		};
	};
};

&timers1 {
    st,prescaler = <0>;
    st,countermode = <STM32_TIM_COUNTERMODE_CENTER_UP_DOWN>;
    status = "okay";

    pwm1: pwm {
        pinctrl-0 = <&tim1_ch1_pc0 &tim1_ch2_pc1 &tim1_ch3_pc2 &tim1_ch4_pc3>;
        pinctrl-names = "default";
        status = "okay";
    };
};

&timers3 {
	st,prescaler = <0>;
	st,countermode = <STM32_TIM_COUNTERMODE_UP>;
	status = "okay";

	counter {
		status = "okay";
	};

	qdec0: qdec {
		pinctrl-0 = <&tim3_ch1_pb4 &tim3_ch2_pb5>;
		pinctrl-names = "default";
		st,encoder-mode = <3>;
		st,counts-per-revolution = <3999>;
		status = "okay";
	};
};